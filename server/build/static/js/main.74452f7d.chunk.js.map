{"version":3,"sources":["hooks/useLocalStorage.js","components/header comps/Nav.js","components/header comps/Header.js","components/Login.js","contexts/FriendsProvider.js","components/Friends/Friends.js","components/Friends/FriendsList.js","contexts/SocketProvider.js","contexts/GamesProvider.js","components/Games/Games.js","components/Games/GamesList.js","components/Games/InnerGameComponents/ColorPicker.js","components/Games/InnerGameComponents/ChatHistory.js","components/Games/OpenGame.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Nav","to","Header","isOpen","setOpen","className","toggled","toggle","onToggle","direction","color","rounded","distance","size","label","style","display","Login","onIdSubmit","idRef","useRef","onSubmit","e","preventDefault","current","for","type","placeholder","name","required","ref","onClick","uuidv4","FriendsContext","React","createContext","useFriends","useContext","FriendsProvider","children","friends","setFriends","Provider","addFriend","id","prevFriends","deleteFriend","filter","f","updateNickname","nickname","newName","console","log","index","findIndex","friend","Friends","map","FriendsList","nameRef","updatedNickname","setUpdatedNickname","allIds","includes","htmlFor","SocketContext","SocketProvider","socket","setSocket","newSocket","io","query","close","GamesContext","useGames","GamesProvider","games","setGames","selectedGameIndex","setSelectedGameIndex","i","length","j","partner","partnerName","formattedGames","game","selected","messages","message","find","sender","fromMe","senderName","addMessageToConversation","useCallback","text","prevGames","gameMatches","newMessage","newGame","on","off","exportValue","selectedGame","sendMessage","emit","selectGameIndex","createGame","Games","setOpenGame","handleClick","target","GamesList","selectedFriendId","setSelectedFriendId","onChange","ColorPicker","setColor","whichColor","background","onChangeComplete","hex","ChatHistory","setRef","node","scrollIntoView","smooth","lastMessage","OpenGame","openGame","setText","yourPartner","Dashboard","toggleTab","setToggleTab","App","setId","setData","fetch","then","res","json","data","dashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74452f7d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// prefix the key so that we can identify it with our project name if we need to check for it\nconst PREFIX = 'guessblue-';\n\n// custom hook to use local storage so our IDs and such persist across runs\nfunction useLocalStorage(key, initialValue) {\n\tconst prefixedKey = PREFIX + key;\n\n\t// store the initial value in state so we can save it locally\n\tconst [value, setValue] = useState(() => {\n\t\tconst jsonValue = localStorage.getItem(prefixedKey);\n\t\tif (jsonValue != null) {\n\t\t\tif (jsonValue === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn JSON.parse(jsonValue);\n\t\t\t}\n\t\t}\n\t\tif (typeof initialValue === 'function') {\n\t\t\treturn initialValue();\n\t\t} else {\n\t\t\treturn initialValue;\n\t\t}\n\t});\n\n\t// store the value whenever it changes\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(prefixedKey, JSON.stringify(value));\n\t}, [prefixedKey, value]);\n\treturn [value, setValue];\n}\n\nexport default useLocalStorage;\n","import { BrowserRouter as Router, Link } from 'react-router-dom';\n// Switch,\n// \tRoute,\n// \tNavLink,\nimport '../styles/Nav.css';\n\nfunction Nav() {\n\treturn (\n\t\t<Router>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to='/rules'>Rules</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to='/invite'>New Game</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to='/invite'>Invite</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to='/leaderboard'>Leaderboard</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</Router>\n\t);\n}\n\nexport default Nav;\n","import React, { useState } from 'react';\nimport '../styles/Header.css';\nimport { Cross as Hamburger } from 'hamburger-react';\n// import {\n// \tBrowserRouter as Router,\n// \tSwitch,\n// \tRoute,\n// \tLink,\n// \tNavLink,\n// } from 'react-router-dom';\nimport Nav from './Nav';\n\nfunction Header() {\n\t// setState for the hamburger nav\n\tconst [isOpen, setOpen] = useState(false);\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h1 className='logo'>\n\t\t\t\t\tguess<span>blue?</span>\n\t\t\t\t</h1>\n\t\t\t\t<Hamburger\n\t\t\t\t\ttoggled={isOpen}\n\t\t\t\t\ttoggle={setOpen}\n\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\tonToggle={(toggled) => {\n\t\t\t\t\t\tif (toggled) {\n\t\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tdirection='left'\n\t\t\t\t\tcolor='turquoise'\n\t\t\t\t\trounded\n\t\t\t\t\tdistance='lg'\n\t\t\t\t\tsize={42}\n\t\t\t\t\tlabel='Show menu'\n\t\t\t\t/>\n\t\t\t</header>\n\t\t\t<br />\n\t\t\t<nav style={{ display: isOpen ? 'block' : 'none' }}>\n\t\t\t\t<Nav />\n\t\t\t</nav>\n\t\t</>\n\t);\n}\n\nexport default Header;\n","import React, { useRef } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './styles/Login.css';\n\nfunction Login({ onIdSubmit }) {\n\tconst idRef = useRef();\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tonIdSubmit(idRef.current.value);\n\t}\n\n\tfunction createNewId(e) {\n\t\tonIdSubmit(uuidv4());\n\t}\n\treturn (\n\t\t<div className='login'>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<label for='name'>\n\t\t\t\t\t<b>name</b>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='whatever you want'\n\t\t\t\t\tname='name'\n\t\t\t\t\trequired></input>{' '}\n\t\t\t\t<br />\n\t\t\t\t<label for='id'>\n\t\t\t\t\t<b>id</b>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='a bunch of special letters and numbers'\n\t\t\t\t\tname='id'\n\t\t\t\t\tref={idRef}\n\t\t\t\t\trequired></input>\n\t\t\t\t<br />\n\t\t\t\t{/* <input type='submit' value='login'></input>{' '} */}\n\t\t\t\t<input onClick={createNewId} type='button' value='new ID' />\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default Login;\n","import React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst FriendsContext = React.createContext();\n\nexport function useFriends() {\n\treturn useContext(FriendsContext);\n}\n// the context provider here wraps around all the code that needs to access a user's friends\n// everything inside this function wrapper and ALL of their children and grandchildren have access to the parameter passed\n// in this case, it's the children inside--the friends stored on local storage\n// we're basically using context to pass state to the whole app, while storing that state locally for each user\n// to give the app access to this context, i wrapped App() inside of it\nexport function FriendsProvider({ children }) {\n\t// save a user's friends in local storage (none by default, haha, losers)\n\tconst [friends, setFriends] = useLocalStorage('friends', []);\n\n\t// add a friend to a user's friends-context so guessblue remembers their many, many beautiful friends\n\t// a friend requires an id and a name as parameters, and then it adds those to the previous list of friends\n\tfunction addFriend(id, name) {\n\t\tsetFriends((prevFriends) => {\n\t\t\treturn [...prevFriends, { id, name }];\n\t\t});\n\t}\n\n\tfunction updateNickname(id, nickname) {\n\t\tlet newName = nickname;\n\t\tconsole.log(`newName: ${newName}`);\n\t\tlet index = friends.findIndex((friend) => friend.id === id);\n\t\tfriends[index].name = newName;\n\t\tconsole.log(`updated nickname: ${friends[index].name}`);\n\t\treturn;\n\t}\n\n\tfunction deleteFriend(id) {\n\t\tsetFriends(friends.filter((f) => f.id != id));\n\t}\n\n\treturn (\n\t\t<FriendsContext.Provider\n\t\t\tvalue={{ friends, addFriend, deleteFriend, updateNickname }}>\n\t\t\t{children}\n\t\t</FriendsContext.Provider>\n\t);\n}\n","import React, { useState, useEffect } from 'react';\nimport { useFriends } from '../../contexts/FriendsProvider';\n\nfunction Friends() {\n\tconst { friends } = useFriends();\n\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t{friends.map((friend) => (\n\t\t\t\t\t<li key={friend.id}>{friend.name}</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n}\nexport default Friends;\n","import React, { useRef, useState } from 'react';\nimport { useFriends } from '../../contexts/FriendsProvider';\nimport Friends from './Friends';\nimport '../styles/FriendsList.css';\n\nfunction FriendsList() {\n\t// == notes ==\n\t//! currently you can add any friend, even if they don't exist\n\n\t// == hooks ==\n\tconst idRef = useRef();\n\tconst nameRef = useRef();\n\tconst { friends, addFriend, deleteFriend, updateNickname } = useFriends();\n\t// i want a state to update in order to rerender the friends map\n\tconst [updatedNickname, setUpdatedNickname] = useState(false);\n\n\t// == functions | variables ==\n\n\tconst allIds = friends.map((friend) => friend.id);\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\t\t// useRef uses the 'current.value' to reflect its content (in the input field) at time of use\n\t\tlet id = idRef.current.value;\n\t\tlet name = nameRef.current.value;\n\t\tconsole.log(`id: ${id}\\nname: ${name}`);\n\n\t\t// console.log(allIds.includes(id));\n\t\tif (allIds.includes(id)) {\n\t\t\tupdateNickname(id, name);\n\t\t\tif (updatedNickname) {\n\t\t\t\tsetUpdatedNickname(false);\n\t\t\t} else {\n\t\t\t\tsetUpdatedNickname(true);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\taddFriend(id, name);\n\t\t}\n\t}\n\n\tfunction checkUnique(id) {\n\t\tconsole.log(`allIds: \\n${allIds}`);\n\t}\n\n\tfunction handleDelete(e) {\n\t\te.preventDefault();\n\n\t\tdeleteFriend(idRef.current.value);\n\t}\n\n\treturn (\n\t\t<div className='friends'>\n\t\t\t<div className='invite-friend'>\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<label htmlFor='new-friend-id' id='id-label'>\n\t\t\t\t\t\tfriend's id:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='new-friend-id'\n\t\t\t\t\t\tid='new-friend-id'\n\t\t\t\t\t\tplaceholder=\"enter your friend's id\"\n\t\t\t\t\t\tref={idRef}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\n\t\t\t\t\t<br />\n\t\t\t\t\t<label htmlFor='new-friend-name' id='name-label'>\n\t\t\t\t\t\tnickname:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='new-friend-name'\n\t\t\t\t\t\tid='new-friend-name'\n\t\t\t\t\t\tplaceholder='enter a nickname'\n\t\t\t\t\t\tref={nameRef}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input type='submit' id='submit-new-friend' value='+' />\n\t\t\t\t\t<button id='delete-friend' onClick={handleDelete}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className='friends-list'>\n\t\t\t\t<ul className='added-friends'>\n\t\t\t\t\t<Friends />\n\t\t\t\t</ul>\n\t\t\t\t<button onClick={checkUnique}>?</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default FriendsList;\n","import React, { useContext, useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst SocketContext = React.createContext();\n\nexport function useSocket() {\n\treturn useContext(SocketContext);\n}\n\nexport function SocketProvider({ id, children }) {\n\tconst [socket, setSocket] = useState();\n\n\t// query.id in server.js comes from here:\n\tuseEffect(() => {\n\t\tconst newSocket = io('http://localhost:4040', { query: { id } });\n\t\tsetSocket(newSocket);\n\n\t\treturn () => newSocket.close();\n\t}, [id]);\n\n\treturn (\n\t\t<SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\n\t);\n}\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { useFriends } from './FriendsProvider';\nimport { useSocket } from './SocketProvider';\n\nconst GamesContext = React.createContext();\n\nexport function useGames() {\n\treturn useContext(GamesContext);\n}\n\nexport function GamesProvider({ children, id }) {\n\tconst [games, setGames] = useLocalStorage('games', []);\n\tconst [selectedGameIndex, setSelectedGameIndex] = useState(0);\n\tconst { friends } = useFriends();\n\tconst socket = useSocket();\n\n\tfunction createGame(partner) {\n\t\tsetGames((prevGames) => {\n\t\t\tif (prevGames.includes(partner)) {\n\t\t\t\tconsole.log('Sorry, you already have a game with them.');\n\t\t\t\t// launch game?\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn [...prevGames, { partner, messages: [] }];\n\t\t});\n\t}\n\n\tfor (let i = 0; i < games.length; i++) {\n\t\tfor (let j = 0; j < friends.length; j++) {\n\t\t\tif (games[i].partner === friends[j].id) {\n\t\t\t\tconst partnerName = friends[j].name;\n\t\t\t\tgames[i].name = partnerName;\n\t\t\t\tgames[i].index = [i];\n\t\t\t}\n\t\t}\n\t}\n\n\tconst formattedGames = games.map((game, index) => {\n\t\tconst selected = index === selectedGameIndex;\n\t\tconst messages = game.messages.map((message) => {\n\t\t\tconst friend = friends.find((friend) => {\n\t\t\t\treturn friend.id === message.sender;\n\t\t\t});\n\t\t\tconst name = (friend && friend.name) || message.sender;\n\t\t\tconst fromMe = id === message.sender;\n\t\t\treturn { ...message, senderName: name, fromMe };\n\t\t});\n\n\t\treturn { ...game, messages, selected };\n\t});\n\n\t// this function [1] receives incoming info about a message,\n\t// [2] checks if a game exists with the current partner,\n\t// [2.1] if it matches, add the new message to match partner's messages array\n\t// [2.2] if it doesnt, create a new game object with the partner, and new message\n\tconst addMessageToConversation = useCallback(\n\t\t({ partner, text, sender }) => {\n\t\t\tconsole.log(`📟 ${JSON.stringify(text)}`); // works\n\t\t\tsetGames((prevGames) => {\n\t\t\t\tlet gameMatches = false;\n\t\t\t\tconst newMessage = { sender, text };\n\t\t\t\tconst newGame = prevGames.map((game) => {\n\t\t\t\t\tif (game.partner === partner) {\n\t\t\t\t\t\tgameMatches = true;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...game,\n\t\t\t\t\t\t\tmessages: [...game.messages, newMessage],\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn game;\n\t\t\t\t});\n\n\t\t\t\tif (gameMatches) {\n\t\t\t\t\treturn newGame;\n\t\t\t\t} else {\n\t\t\t\t\t// if gameMatches is false\n\t\t\t\t\treturn [...prevGames, { partner, messages: [newMessage] }];\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t[setGames]\n\t);\n\n\tuseEffect(() => {\n\t\tif (socket == null) {\n\t\t\tconsole.log('🕳️ SOCKET IS NULL');\n\t\t\treturn;\n\t\t}\n\t\tsocket.on('receive-message', addMessageToConversation);\n\n\t\treturn () => socket.off('receive-message');\n\t}, [socket, addMessageToConversation]);\n\n\tfunction sendMessage(partner, text) {\n\t\tsocket.emit('send-message', { partner, text });\n\n\t\taddMessageToConversation({ partner, text, sender: id });\n\t}\n\n\tconst exportValue = {\n\t\tgames: formattedGames,\n\t\tselectedGame: formattedGames[selectedGameIndex],\n\t\tsendMessage,\n\t\tselectGameIndex: setSelectedGameIndex,\n\t\tcreateGame,\n\t};\n\n\treturn (\n\t\t<GamesContext.Provider value={exportValue}>\n\t\t\t{children}\n\t\t</GamesContext.Provider>\n\t);\n}\n","import React from 'react';\nimport { useGames } from '../../contexts/GamesProvider';\n\nfunction Games({ setOpenGame }) {\n\tconst { games, selectGameIndex } = useGames();\n\n\tfunction handleClick(e) {\n\t\te.preventDefault();\n\t\tselectGameIndex(e.target.value);\n\t\tsetOpenGame(true);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t{games.map((game) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className='created-games'>\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={game.partner}\n\t\t\t\t\t\t\t\tvalue={game.index}\n\t\t\t\t\t\t\t\tname={game.name}\n\t\t\t\t\t\t\t\tonClick={handleClick}>\n\t\t\t\t\t\t\t\t{game.name}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<button>🗑️</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n}\nexport default Games;\n","import React, { useRef, useState } from 'react';\nimport Games from './Games';\nimport { useFriends } from '../../contexts/FriendsProvider';\nimport { useGames } from '../../contexts/GamesProvider';\nimport '../styles/GamesList.css';\n\nfunction GamesList({ setOpenGame }) {\n\t// == notes ==\n\n\t// == hooks ==\n\tconst { friends } = useFriends();\n\tconst { createGame } = useGames();\n\tconst [selectedFriendId, setSelectedFriendId] = useState('');\n\tlet gamePartner = selectedFriendId;\n\n\t// == functions | variables ==\n\n\tfunction handleSelect(e) {\n\t\tsetSelectedFriendId(e.target.value);\n\t}\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconsole.log(createGame);\n\n\t\tcreateGame(selectedFriendId);\n\t}\n\n\t// == renders ==\n\n\treturn (\n\t\t<div className='games'>\n\t\t\t<div className='start-game'>\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<label for='choose-friend' id='new-game-label'>\n\t\t\t\t\t\tstart a new game with your bud{' '}\n\t\t\t\t\t</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tname='choose-friend'\n\t\t\t\t\t\tid='choose-friend'\n\t\t\t\t\t\tonChange={handleSelect}>\n\t\t\t\t\t\t<option selected value='pick a friend'>\n\t\t\t\t\t\t\tpick your favorite friend\n\t\t\t\t\t\t</option>\n\t\t\t\t\t\t{friends.map((friend) => (\n\t\t\t\t\t\t\t<option value={friend.id} label={friend.name} key={friend.id}>\n\t\t\t\t\t\t\t\t{friend.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t\t<input type='submit' id='start-game-button' value='🎨' />\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className='games-list'>\n\t\t\t\t<ul className='created-games'>\n\t\t\t\t\t<Games setOpenGame={setOpenGame} />\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default GamesList;\n","import React, { useState } from 'react';\nimport { SliderPicker } from 'react-color';\nimport '../../styles/ColorPicker.css';\n\nfunction ColorPicker() {\n\t// == notes ==\n\n\t// == states | refs | contexts ==\n\tconst [color, setColor] = useState('#40e0d0');\n\n\t// == functions | variables ==\n\n\tfunction handleChange(color, e) {\n\t\tconsole.log('color changing...');\n\t\tsetColor({ background: color.hex });\n\t\twhichColor();\n\t}\n\n\tfunction whichColor() {\n\t\tconsole.log(color.background);\n\t}\n\n\t// == renders ==\n\treturn (\n\t\t<div className='custom-picker'>\n\t\t\t<div className='color-block' />\n\t\t\t<SliderPicker color={color} onChangeComplete={handleChange} />\n\t\t</div>\n\t);\n}\nexport default ColorPicker;\n","import React, { useRef, useCallback } from 'react';\nimport { useGames } from '../../../contexts/GamesProvider';\n\nfunction ChatHistory() {\n\t// == notes ==\n\n\t// == hooks ==\n\tconst { selectedGame } = useGames();\n\tconst setRef = useCallback((node) => {\n\t\tif (node) {\n\t\t\tnode.scrollIntoView({ smooth: true });\n\t\t}\n\t}, []);\n\n\t// == functions | variables ==\n\n\treturn (\n\t\t<>\n\t\t\t<div className='messages'>\n\t\t\t\t{selectedGame.messages.map((message, index) => {\n\t\t\t\t\tconst lastMessage = selectedGame.messages.length - 1 === index;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={lastMessage ? setRef : null}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName='single-message-container'>\n\t\t\t\t\t\t\t<div className='single-message-text'>{message.text}</div>\n\t\t\t\t\t\t\t<div className='single-message-name'>\n\t\t\t\t\t\t\t\t{message.fromMe ? 'you' : message.senderName}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</>\n\t);\n}\nexport default ChatHistory;\n","import React, { useState } from 'react';\nimport { useGames } from '../../contexts/GamesProvider';\nimport ColorPicker from './InnerGameComponents/ColorPicker';\nimport ChatHistory from './InnerGameComponents/ChatHistory';\nimport '../styles/Modal.css';\n\nfunction OpenGame({ openGame, setOpenGame }) {\n\t// == notes ==\n\n\t// == hooks ==\n\tconst [text, setText] = useState('');\n\tconst { selectedGame, sendMessage } = useGames();\n\n\t// == functions | variables ==\n\n\tlet yourPartner = selectedGame ? selectedGame.name : null;\n\n\tfunction closeGame() {\n\t\tsetOpenGame(false);\n\t}\n\n\tconst handleChange = (e) => setText(e.target.value);\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tsendMessage(selectedGame.partner, text);\n\t\tsetText('');\n\t}\n\n\t// == renders ==\n\tif (!openGame) return null;\n\treturn (\n\t\t<>\n\t\t\t<div className='modal-overlay' onClick={closeGame} />\n\t\t\t<div className='open-game-modal'>\n\t\t\t\t{/* <button className='close-game' onClick={closeGame}>\n\t\t\t\t\tX\n\t\t\t\t</button> */}\n\t\t\t\t<header className='game-header'>\n\t\t\t\t\t<h4 className='game-header'>playing with {yourPartner}</h4>\n\t\t\t\t\t<h5 className='game-header'>it's a color conspiracy!</h5>\n\t\t\t\t</header>\n\t\t\t\t{/* ======= */}\n\t\t\t\t<section className='color-display'>\n\t\t\t\t\t<ColorPicker />\n\t\t\t\t</section>\n\t\t\t\t{/* ======= */}\n\t\t\t\t{/* <div className='message-display'> */}\n\t\t\t\t<ChatHistory />\n\t\t\t\t{/* </div> */}\n\t\t\t\t{/* ======= */}\n\t\t\t\t<div className='footer-form'>\n\t\t\t\t\t<form className='send-message' onSubmit={handleSubmit}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='textbox'\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\ttype='textarea'\n\t\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className='send-button' type='submit' value='send' />\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default OpenGame;\n","import React, { useState } from 'react';\nimport FriendsList from './Friends/FriendsList';\nimport GamesList from './Games/GamesList';\nimport OpenGame from './Games/OpenGame';\nimport { useGames } from '../contexts/GamesProvider';\nimport './styles/Dashboard.css';\nimport './styles/Modal.css';\n\nfunction Dashboard({ id }) {\n\t// == notes ==\n\t//! fix id copy-onClick\n\n\t// == states | refs | contexts ==\n\tconst { selectedGame } = useGames();\n\tconst [toggleTab, setToggleTab] = useState(false);\n\tconst [openGame, setOpenGame] = useState(false);\n\t// == functions | variables ==\n\n\t// == renders ==\n\n\treturn (\n\t\t<div className='dashboard'>\n\t\t\t<OpenGame openGame={openGame} setOpenGame={setOpenGame} />\n\n\t\t\t<div className='dash-main'>\n\t\t\t\t{toggleTab ? <GamesList setOpenGame={setOpenGame} /> : <FriendsList />}\n\t\t\t</div>\n\t\t\t<footer>\n\t\t\t\t<div className='id-display'>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tyour id:\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName='id-span'\n\t\t\t\t\t\t\t// onClick={() => {\n\t\t\t\t\t\t\t// \tnavigator.clipboard.writeText(this.state.textToCopy);\n\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{id}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='footer-tabs'>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tname='game tab'\n\t\t\t\t\t\tid='big-game-tab'\n\t\t\t\t\t\tonClick={() => setToggleTab(true)}>\n\t\t\t\t\t\t<h3>games</h3>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tname='friends tab'\n\t\t\t\t\t\tid='big-friends-tab'\n\t\t\t\t\t\tonClick={() => setToggleTab(false)}>\n\t\t\t\t\t\t<h3>friends</h3>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default Dashboard;\n","import './fonts.css';\nimport './App.css';\nimport React, { useState } from 'react';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport Header from './components/header comps/Header';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport { FriendsProvider } from './contexts/FriendsProvider';\nimport { GamesProvider } from './contexts/GamesProvider';\nimport { SocketProvider } from './contexts/SocketProvider';\n\nfunction App() {\n\t// console.clear();\n\tconst [id, setId] = useLocalStorage('id');\n\tconst [data, setData] = useState('');\n\n\tReact.useEffect(() => {\n\t\tfetch('/api')\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => setData(data.message));\n\t}, []);\n\n\t// everything in our dashboard has the friends/games context now bc we're providing it here\n\tconst dashboard = (\n\t\t<SocketProvider id={id}>\n\t\t\t<FriendsProvider>\n\t\t\t\t<GamesProvider id={id}>\n\t\t\t\t\t<Dashboard id={id} />\n\t\t\t\t</GamesProvider>\n\t\t\t</FriendsProvider>\n\t\t</SocketProvider>\n\t);\n\t// the id we're passing in above ^ is our own\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header>\n\t\t\t\t<Header />\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<>{id ? dashboard : <Login onIdSubmit={setId} />}</>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}